---
// Highlights Section
// ------------
// Description: A section with a multiple text and image rows.

// Components
// - UI
import TextImage from '../basic/TextImage.astro'
import { portableTextToHTML } from '../../../lib/portableTextHelpers'

// Props
type HighlightBlockData = {
	heading: any[] // PortableText array
	text: string
	image?: any
	mobileImage?: any
	order?: number
}

type Props = {
	data?: HighlightBlockData[]
}

const { data } = Astro.props

// Fallback content
import highlight01 from '../../../assets/highlights/highlight-01.svg'
import highlight01mobile from '../../../assets/highlights/highlight-01-mobile.svg'
import highlight02 from '../../../assets/highlights/highlight-02.svg'
import highlight02mobile from '../../../assets/highlights/highlight-02-mobile.svg'
import highlight03 from '../../../assets/highlights/highlight-03.svg'
import highlight03mobile from '../../../assets/highlights/highlight-03-mobile.svg'
import highlight04 from '../../../assets/highlights/highlight-04.svg'
import highlight04mobile from '../../../assets/highlights/highlight-04-mobile.svg'

type HighlightBlock = {
	title: string
	text: string
	image: any
	mobileImage?: any
	imageWidth: number
	imageHeight: number
	imagePosition: 'left' | 'right'
}

const defaultHighlightBlocks: HighlightBlock[] = [
	{
		title: 'Complete Project <strong>Visibility</strong>',
		text: 'Gain complete visibility into your projects and tasks with our comprehensive dashboard. Easily track progress, deadlines, and team performance at a glance. Our dashboard offers real-time project tracking',
		image: highlight01,
		imageWidth: highlight01.width,
		imageHeight: highlight01.height,
		mobileImage: highlight01mobile,
		imagePosition: 'right'
	},
	{
		title: 'Advanced <strong>Automation</strong> Tools',
		text: 'Automate repetitive tasks and streamline your workflow with our advanced automation tools. Save time and reduce errors by leveraging automated task assignments, workflow templates, and seamless integration with popular apps and services.',
		image: highlight02,
		mobileImage: highlight02mobile,
		imageWidth: highlight02.width,
		imageHeight: highlight02.height,
		imagePosition: 'left'
	},
	{
		title: '<strong>Effective</strong> Team Collaboration',
		text: 'Enhance team communication and collaboration with our seamless tools. Keep everyone on the same page and ensure efficient project execution through real-time messaging, shared document editing, and task comments. ',
		image: highlight03,
		mobileImage: highlight03mobile,
		imageWidth: highlight03.width,
		imageHeight: highlight03.height,
		imagePosition: 'right'
	},
	{
		title: 'Robust Data <strong>Security</strong>',
		text: 'Protect your data with our robust security features. We prioritize your privacy and security to ensure that your information is always safe. With end-to-end encryption, role-based access control, and regular security audits.',
		image: highlight04,
		mobileImage: highlight04mobile,
		imageWidth: highlight04.width,
		imageHeight: highlight04.height,
		imagePosition: 'left'
	}
]

// Use Sanity data if available, otherwise use default data
let finalHighlightBlocks: HighlightBlock[] = defaultHighlightBlocks

if (data && data.length > 0) {
	// Convert Sanity data to component format
	finalHighlightBlocks = data.map((block, index) => ({
		title: portableTextToHTML(block.heading),
		text: block.text,
		image: block.image || defaultHighlightBlocks[index % defaultHighlightBlocks.length]?.image,
		mobileImage: block.mobileImage || defaultHighlightBlocks[index % defaultHighlightBlocks.length]?.mobileImage,
		imageWidth: block.image?.width || defaultHighlightBlocks[index % defaultHighlightBlocks.length]?.imageWidth || 600,
		imageHeight: block.image?.height || defaultHighlightBlocks[index % defaultHighlightBlocks.length]?.imageHeight || 400,
		imagePosition: index % 2 === 0 ? 'right' : 'left' as 'left' | 'right'
	}))
}

---

{
	finalHighlightBlocks.map((highlight: HighlightBlock, key: number) => (
		<TextImage
			id={`highlight-${key}`}
			title={highlight.title}
			text={highlight.text}
			image={highlight.image}
			imageWidth={highlight.imageWidth}
			imageHeight={highlight.imageHeight}
			mobileImage={highlight.mobileImage}
			imagePosition={highlight.imagePosition}
			classes={key === 0 ? '!pb-0' : key === finalHighlightBlocks.length - 1 ? '!pt-0' : '!py-0'}
		/>
	))
}
