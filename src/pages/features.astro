---
// Components
// - Layout
import Layout from '../layouts/Layout.astro'
// - UI
import FeatureComponent from '../components/blocks/features/FeatureSticky.astro'
import Hero from '../components/blocks/hero/PageHeader.astro'
import CTA from '../components/blocks/CTA/BasicDark.astro'

// Data - Fully from Sanity
import { getFeaturesPage, getFeaturesByCategory } from '../lib/sanity'
import type { FeaturesPage, FeatureSection, Feature } from '../lib/sanity/types'

// Fetch complete features page data from Sanity
const featuresPageData: FeaturesPage | null = await getFeaturesPage()

// Fallback data if Sanity data is not available
const defaultSEO = {
  title: 'Features | Foxi - Your Productivity Toolkit',
  description: 'Discover powerful features that boost your productivity and streamline your workflow.'
}

const defaultHeader = {
  title: 'Powerful Features',
  text: 'Discover the tools and capabilities that make Foxi the ultimate productivity solution.'
}

// Extract data with fallbacks
const SEO = featuresPageData?.seo || defaultSEO
const header = featuresPageData?.header || defaultHeader
const featureSections = featuresPageData?.featureSections || []
const ctaData = featuresPageData?.cta

// Sort feature sections by order
const sortedFeatureSections: FeatureSection[] = featureSections.sort((a: FeatureSection, b: FeatureSection) => (a.order || 0) - (b.order || 0))

// Fetch features for each category
const featuresData: Record<string, Feature[]> = {}
for (const section of sortedFeatureSections) {
  if (section.category) {
    featuresData[section.category] = await getFeaturesByCategory(section.category)
  }
}

---

<Layout title={SEO.title} description={SEO.description}>
	<Hero title={typeof header.title === 'string' ? header.title : ''} text={header.text} />
	
	{sortedFeatureSections.map((section: FeatureSection, index: number) => {
		const features: Feature[] = featuresData[section.category] || []
		const isEven = index % 2 === 1
		const classes = section.backgroundColor || (isEven ? 'bg-neutral-50 dark:bg-neutral-900' : '')
		
		return (
			<FeatureComponent
				title={typeof section.title === 'string' ? section.title : ''}
				text={section.text}
				data={features.map(feature => ({
					title: typeof feature.title === 'string' ? feature.title : '',
					icon: feature.icon,
					description: feature.description
				}))}
				classes={classes}
			/>
		)
	})}
	
	{ctaData ? (
		<CTA data={ctaData} />
	) : (
		<CTA />
	)}
</Layout>
